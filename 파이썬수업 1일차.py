#print("Hello python")


# 한 줄 주석 

'''
여러줄 주석
여러줄 주석
여려줄 주석 
'''

#    드래그 + ctrl + / 
#    여러줄 편하게 드래그해서 주석처리할때 
# 
# 
# 
# 
# 

#[예제.1]
'''
print("hello python")   #출력하고자 하는 "" 안에 내용을 입력하면 됨.
print("python Test!!")  #코드 끝나는 지점에는 원래 ;(세미클론)을 붙혀줘야하는데 알아서 지가 자동으로 붙혀줌.
print("안녕"); print("하세요") #한줄에 어려개 작업을 할경우는 수동으로 ;(세미클론을) 찍어줘야함 마지막껀 지가 알아서 인식하고 찍음.
'''

'''
# [예제.2]
print("10더하기20은", 10+20) # 앞에 따음표로 들어가있으면 문자식으로 인식함. 뒤에 숫자는 숫자식으로 인식함.구분안에서 ,를 찍으면 내용을 추가할수있는데 간단한 연산을 만들수있음
print("10 + 20 =" , 10+20)  #덧셋 뺄셈 나눗셈 등은 연산자 기능
print("2곱하기2는", 2*2)
print("2 * 2 = ", 2*2)
'''


#파이썬은 타입 신경 쓰지 않아도 됨. 
#변수를 정의할 때 다른언어들은 타입을 정의해줘야함.
# 데이터 타입을 (int, char, flout) 정의를 해줘야하는데 파이썬은 알아서함.
#다른언들은 구조체 내부에는 기본자료형을 묶어서 씀
#포인터는 새로운 데이터 타입이 추가되어 주소타입신경쎠야됨.
#java, python 


#\t 탭 띄어쓰기    새로운 줄 라인 맞춰서 출력할때 사용
#Aaa[8 칸 공백]aaaaaaaaaaaa
#Aa[8 칸 공백]aaaaaaaaaaaa


# /t 8칸 공백
#print('aaa\tbbb\tccc')
 
# \n 줄바꿈
#print("TEST\ n강조!\n테스트\n") 


#줄 전체복사할때 마우스 포인터만 그 위치에 있으면 전체 복붙가능 
#ctrl + alt  +방향키 드래그 편하게 하기

# ''이걸 쓰고싶을때 이렇게 쓰세요.
#print("내용 '강조'")

'''
print ("\t\t####회비정보####")
print("========================================")
print("이름\t 나이\t 전화번호\t 회비\t")
print("김동완\t 348\t 010-1111-1111\t 20,000")
print("김동완\t 38\t 010-1111-1111\t 20,000")
print("김동완\t 38\t 010-1111-1111\t 20,000")
print("김동완\t 38\t 010-1111-1111\t 20,000")
print("========================================")
print("총합계\t\t\t\t100,000")
print("========================================")
'''



# print ("\t\t####회비정보#### \n======================================== 이름\t 나이\t 전화번호\t 회비\t \n =======================================\n 김동안\t 38\t 010-1111-1111\t 20000\t \n 김동안\t 38\t 010-1111-1111\t 20000 \n 김동안\t 38\t 010-1111-1111\t 20000 \n =======================================\n 총합계 \t\t\t 100,100\n========================================" )



# print("#### 회비 정보 ####")
# print("=" * 40)
# print("{:<6} {:<4} {:<15} {:>7}".format("이름", "나이", "전화번호", "회비"))
# print("=" * 40)
# print("{:<6} {:<4} {:<15} {:>7}".format("김동완", 38, "010-1111-1111", "₩20,000"))
# print("{:<6} {:<4} {:<15} {:>7}".format("서지수", 24, "010-1234-5678", "₩30,000"))
# print("{:<6} {:<4} {:<15} {:>7}".format("이지은", 25, "010-2525-2345", "₩50,000"))
# print("-" * 40)
# print("{:<27} {:>10}".format("총합계", "₩100,000"))
# print("=" * 40)


# print('\t #### 회비 정보 ####')
# print('=' * 40)
# print('이름\t나이\t전화번호\t회비')
# print('=' * 40)
# print('김동완\t38\t010-1111-1111\t\\20,000')
# print('서지수\t24\t010-1234-5678\t\\30,000')
# print('이지은\t25\t010-2525-2345\t\\50,000')
# print('-' * 40)
# print('총합계\t\t\t\t\\100,000')
# print('=' * 40)

# [예제.5]

# 1. 단일문자 및 문자 출력
#print ("{}{}" .format('A', 'String'))   #.format 이라는 chmod는 A라는 값이 {}1번째에 들어가고 String라는 값이{}2번째에 들어감
#print("%c%s" %('A', "string"))   
'''
A=100  
print("Test{}Test" .format(A))
A=200
print("Test{}Test" .format(A))
'''

# 2 소수점 수 출력
#print ("키:{:f}/몸무게:{:f}" .format(180.12, 83.12))

#몇번째 까지만 출력할거야 라고 지정
#rint ("키:{:.4f}/몸무게:{:.4f}" .format(180.12, 83.12))

#3. 고정길이 출력 및 정렬 ( 천단위 자동입력 )
'''
print ("{}원" .format(10000)) #기본5칸 띄움
print ("{:10}원" .format(10000)) #10칸 띄움 
print ("{:>10}원" .format(10000)) #10칸 띄움 왼쪽정렬
print ("{:<10}원" .format(10000)) #10칸 띄움 오른쪽정렬
print ("{:^10}원" .format(10000)) #10칸 띄움 가운데정렬
print ("{:,}원" .format(10000)) #10칸 띄움 금액 나올때 ,자동으로 표시되게
'''


'''
print("{:>30} ".format ("파이썬 쇼핑몰"))
print("{} {:<4} ".format("번호", "1078718855"))
print("{} {:<4} ".format("주소", "서울시 종로구 종로3가"))
print("{} {:<4} ".format("성명", "김사장"))
print("{} {:<4} ".format("전화", "070-1234-5678"))
print('-' * 40)
print("{:<6} {:<6} {:<6} {:<6} ".format("품명", "단가", "수량", "금액"))
print("{:<10} {:>20,}".format("소 계", 93000))
print('-' * 40)
print("{:<10} {:>20,}".format("청구금액", 93000))
print("{:<10} {:>20,}".format("받은금액", 100000))
print("{:<10} {:>20,}".format("거스름돈", 7000))
print('-' * 40)
'''

'''
# [문제]
print('\t\t{}' .format('파이썬 쇼핑몰'))
print('번호 : {}' .format(1078718855))
print('주소 : {}' .format('서울시 종로구 종로 3가'))
print('성명 : {}' .format('강사'))
print('전화 : {}' .format('070-1234-5678'))
print('----------------------------------------------')
print('\t{}\t\t{}\t{}\t{}' .format ('품명',' 단가',' 수량',' 금액'))
print('----------------------------------------------')
print('{:>10}\t{:,}\t{:>4}\t{:,}' .format('블루투스 이어폰',85000,1,85000))
print('{:>12}\t\t{:>6,}\t{:>4}\t{:>6,}' .format('USB 3.0 8G',8000,1,8000))
print('----------------------------------------------')
print('{}\t\t\t\t\t{:,}' .format('소 계', 93000))
print('----------------------------------------------')
print('{}\t\t\t\t{:,}' .format('청구금액', 93000))
print('{}\t\t\t{:>14,}' .format('받은금액', 100000))
print('{}\t\t\t\t{:>6,}' .format('거스름돈', 7000))
print('----------------------------------------------')
'''

#[변수]
# - 한가지의 값으로 고정되어있지 않고, 여러 값으로 변할 수 있는 데이터 저장 공간
# - 데이터를 사용하기 위해 메모리의 공간을 할당 받아 해당 공간에 이름을 부여하여 사용

#[예제.6]
# 변수 작명 규칙
# 1. 알파벳, 숫자, 언더스코어(_)로 구성
# 2. 알파벳은 대/소문자 구분 /// a -> A 랑 다르다
# 3. 한글 사용 가능  //  한글 사용가능하긴 한데 사용안한다.
# 4. 변수명의 시작은 숫자로 할 수 없음    // 1_var는 불가능 var_1 var_2는 가능
# 5. 공백이나 특수 기호는 포함 할 수 없음 // 띄어쓰기는 불가능   
# 6. Python 예약어는 사용하면 안된다. // 변수이름 print 이런건 불가능

# 변수이름 지으는게 쉽지않음.


# 변수 자료형 종류 
# 1.정수 : 0과 음수, 양수 값을 포함하는 숫자 값  //
# 2.실수 : 소수점을 사용하는 숫자 값   //
# 3.문자열 : 따옴표로 묶여 있는 값 // 
# 파이썬은 정수 실수 문자열 DataType 이 필요없다 그렇기에 신경안써도됨.

#자료구조
# 4.리스트 : 정수, 실수 및 문자열 등 자료들의 집합 (값의 집합)
# 5.튜플 : 정수, 실수 및 문자열 등 자료들의 집합 (값의 집합)
# 6.사전 : 정수, 실수, 및 문자열 등 자료들의 집합 (키와 값이 쌍으로 존재)
# 자료구조란 데이터를 보관하는 방식(알고리즘)
# 파이썬은 값을 대압하면서 자동으로 정의된다 A=100 , B=123,456 

#변수지정
# var1 = 100  ##100이라는 값을 var1값에 가져다가 집어넣겠다. 
# var2 , var3 = 200, 300 # var2는 200에 가져다넣고 var3은 300에 가져다넣음
#var4 = var5 = 500 #대입 연산자가 두개 이상 나오면 오른쪽부터 해석 
#서식문자사용 
#print("var=1={}, var2={}, var3={}, var4={}, var5={}" .format(var1,var2,var3,var4,var5))


#v1 = 100; v2 = 1.123; v3 = "123"

#A = v1 - int(v2)  #v2를 정수로 바꿔서 연산해  
#print(A, type(A))
#v2 = int(v2)  # 강제적으로 실수에서 정수로 변환
#print(v2, type(v2))

#v1 = float(v1)   ##강제적으로 정수형에서 실수형으로 변환
#print(v1, type(v1))  
'''
v3 = int = str(v3)
print(v3, type(v3)) 
v3 = "ASD"
print(v3, type(v3))
'''
#v3 = int(v3)
#print(v3, type(v3)) #문자열값을 정수값으로 변환은 당연히 안됨.
# print(v1, type(v1)) int   정수
# print(v2, type(v2)) float 실수
# print(v3, type(v3)) str   문자
#문제1
# num1 = 10; num2 = 20; sum = num1 +num2;  
# print("num1 {} + num2 {} = sum {}".format(num1, num2, sum))

#문제2
# num1 = 7 
# num2 = 5 
# sum1 = 12
# sum2 = 35
# sum3 = 2
# sum4 = 1.4

#연산으로 계산
# a = (num1 + num2)
# b = (num1 - num2)
# c = (num1 * num2)
# d = (num1 / num2)
# print(a)
#print("num1 {} + num2 {} = sum1 {}" .format(num1, num2, sum))


#문제3
# python = 100; aye = 20; c = 50; java = 50
# sum = (python + c + java)
# sum1 = (sum / 2)

# print ('python {}점' .format(python))

# print ("나는 {}살입니다." .format(aye))

# print ("총합계는 {} 입니다" .format(sum))

# print ("총평균은 {:2f} 입니다." .format(sum1))

#문제4
# su = 100
# num = '100'
# fit = 1.111
# print(su + int(num))
# print(su + fit)
# print("{}{}".format(su, su))


# su = 100
# num ='100'
# fit = 1.111
# print("{}".format(type(su)))
# print("{}".format(type(num)))
# print("{}".format(type(fit)))
# print("정수 형변환 : {}".format(su+int(num)))
# print("실수 형변환 : {:.3f}".format(su+fit))
# print("문자열 형변환 : {}".format(str(su)+num))
